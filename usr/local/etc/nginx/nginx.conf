# ref.:
# + http://www.ha97.com/5194.html

# 定义 Nginx 运行的用户和用户组
#user  nobody;

# Nginx 进程数，建议设置为等于 CPU 总核心数
worker_processes  1;

# 全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]
#error_log  logs/error.log;
#error_log  logs/notice.log  notice;
#error_log  logs/info.log  info;

# 进程文件
#pid        logs/nginx.pid;

# 工作模式与连接数上限
events {
    # 参考事件模型，use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]。epoll 模型是 Linux 2.6 以上版本内核中的高性能网络 I/O 模型，如果跑在 FreeBSD 上，就用 kqueue 模型。
    #use epoll;

    # 单个进程最大连接数（最大连接数 = 连接数 * 进程数）
    worker_connections  1024;
}

# 设定 http 服务器
http {
    # 文件扩展名与文件类型映射表
    include       mime.types;

    # 默认文件类型
    default_type  application/octet-stream;

    # 默认编码
    #charset utf-8;

    # 访问日志格式
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # 访问日志路径
    #access_log  logs/access.log  main;

    # 开启高效文件传输模式，sendfile 指令指定 Nginx 是否调用 sendfile 函数来输出文件，对于普通应用设为 on，如果用来进行下载等应用磁盘 I/O 重负载应用，可设置为 off，以平衡磁盘与网络 I/O 处理速度，降低系统的负载。注意：如果图片显示不正常把这个改成 off。
    sendfile        on;

    # 防止网络阻塞
    #tcp_nopush     on;
    #tcp_nodelay    on;

    # 长连接超时时间，单位是秒
    keepalive_timeout  65;

    # 开启 gzip 压缩输出
    #gzip  on;

    # 虚拟主机的配置
    server {
        # 监听 http/https 端口
        listen       80;
        listen       443 ssl;

        # ssl 证书地址
        ssl_certificate         /usr/local/etc/nginx/ssl/ca.csr;
        ssl_certificate_key     /usr/local/etc/nginx/ssl/ca_nopass.key;

        # 域名可以有多个，用空格隔开
        server_name  localhost shangzuo.com;

        # 根目录
        #root         /Users/mingelz;

        # 默认首页
        #index        index.html index.htm;

        # 定义本虚拟主机的访问日志
        #access_log  logs/host.access.log  main;

        # 针对具体路径做设置
        location / {
            root   /Users/mingelz;
            index  index.html index.htm;

            # 开启 SSI
            ssi on;
            ssi_silent_errors on;
            #ssi_types text/shtml;

            # 开启目录列表访问，适合下载服务器，默认关闭
            autoindex on;

            # 显示出文件的大概大小，默认为on，显示出文件的确切大小
            autoindex_exact_size off;

            # 显示的文件时间为文件的服务器时间，默认 off，表示显示的文件时间为 GMT 时间
            autoindex_localtime on;
        }

        # 将某个路径的请求转到另一个目录
        #location /test {
        #    alias /Users/mingelz/test;
        #    index index.html;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

        # 设定查看 Nginx 状态的地址，需要编译 Nginx 时指定 –with-http_stub_status_module
        #location /NginxStatus {
        #    stub_status on;
        #    access_log off;
        #    auth_basic "NginxStatus";
        #    # htpasswd 文件的内容可以用 apache 提供的 htpasswd 工具来产生。
        #    #auth_basic_user_file conf/htpasswd;
        #}
    }


    # 可以多个 server 监听 80 端口，但 server_name 不同，解析到不同的地方
    #server {
    #    listen       80;
    #    server_name  api.shangzuo.com;

         # 定义反向代理
    #    location / {
    #        # 将请求的 Host 头带到真实服务器上
    #        proxy_set_header Host $http_host;
    #        # 将此反向代理指到 8001 端口
    #        proxy_pass   http://127.0.0.1:8001;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
